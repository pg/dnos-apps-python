# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protobuf.proto.grpcintegration import ControlMessagesProto_pb2 as protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2
from protobuf.proto.grpcintegration import EventNotificationProto_pb2 as protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2
from protobuf.proto.grpcintegration import StatusProto_pb2 as protobuf_dot_proto_dot_grpcintegration_dot_StatusProto__pb2
from protobuf.proto.net import ConnectPointProto_pb2 as protobuf_dot_proto_dot_net_dot_ConnectPointProto__pb2
from protobuf.proto.net import DeviceIdProto_pb2 as protobuf_dot_proto_dot_net_dot_DeviceIdProto__pb2
from protobuf.proto.net import DeviceProto_pb2 as protobuf_dot_proto_dot_net_dot_DeviceProto__pb2
from protobuf.proto.net import HostIdProto_pb2 as protobuf_dot_proto_dot_net_dot_HostIdProto__pb2
from protobuf.proto.net import HostProto_pb2 as protobuf_dot_proto_dot_net_dot_HostProto__pb2
from protobuf.proto.net.packet import OutboundPacketProto_pb2 as protobuf_dot_proto_dot_net_dot_packet_dot_OutboundPacketProto__pb2
from protobuf.proto.net.topology import TopologyGraphProto_pb2 as protobuf_dot_proto_dot_net_dot_topology_dot_TopologyGraphProto__pb2
from protobuf.proto.net.topology import TopologyProto_pb2 as protobuf_dot_proto_dot_net_dot_topology_dot_TopologyProto__pb2


class PacketOutServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.emit = channel.unary_unary(
                '/grpcintegration.PacketOutService/emit',
                request_serializer=protobuf_dot_proto_dot_net_dot_packet_dot_OutboundPacketProto__pb2.OutboundPacketProto.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_StatusProto__pb2.PacketOutStatus.FromString,
                )


class PacketOutServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def emit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PacketOutServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'emit': grpc.unary_unary_rpc_method_handler(
                    servicer.emit,
                    request_deserializer=protobuf_dot_proto_dot_net_dot_packet_dot_OutboundPacketProto__pb2.OutboundPacketProto.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_StatusProto__pb2.PacketOutStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcintegration.PacketOutService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PacketOutService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def emit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.PacketOutService/emit',
            protobuf_dot_proto_dot_net_dot_packet_dot_OutboundPacketProto__pb2.OutboundPacketProto.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_StatusProto__pb2.PacketOutStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class FlowServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.applyFlowRules = channel.unary_unary(
                '/grpcintegration.FlowService/applyFlowRules',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.FlowRules.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_StatusProto__pb2.FlowServiceStatus.FromString,
                )
        self.removeFlowRules = channel.unary_unary(
                '/grpcintegration.FlowService/removeFlowRules',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.FlowRules.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_StatusProto__pb2.FlowServiceStatus.FromString,
                )
        self.getFlowRuleCount = channel.unary_unary(
                '/grpcintegration.FlowService/getFlowRuleCount',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.FlowRuleCount.FromString,
                )


class FlowServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def applyFlowRules(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeFlowRules(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getFlowRuleCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FlowServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'applyFlowRules': grpc.unary_unary_rpc_method_handler(
                    servicer.applyFlowRules,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.FlowRules.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_StatusProto__pb2.FlowServiceStatus.SerializeToString,
            ),
            'removeFlowRules': grpc.unary_unary_rpc_method_handler(
                    servicer.removeFlowRules,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.FlowRules.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_StatusProto__pb2.FlowServiceStatus.SerializeToString,
            ),
            'getFlowRuleCount': grpc.unary_unary_rpc_method_handler(
                    servicer.getFlowRuleCount,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.FlowRuleCount.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcintegration.FlowService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FlowService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def applyFlowRules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.FlowService/applyFlowRules',
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.FlowRules.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_StatusProto__pb2.FlowServiceStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def removeFlowRules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.FlowService/removeFlowRules',
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.FlowRules.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_StatusProto__pb2.FlowServiceStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getFlowRuleCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.FlowService/getFlowRuleCount',
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.FlowRuleCount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TopoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getGraph = channel.unary_unary(
                '/grpcintegration.TopoService/getGraph',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_net_dot_topology_dot_TopologyGraphProto__pb2.TopologyGraphProto.FromString,
                )
        self.currentTopology = channel.unary_unary(
                '/grpcintegration.TopoService/currentTopology',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_net_dot_topology_dot_TopologyProto__pb2.TopologyProto.FromString,
                )
        self.getPaths = channel.unary_unary(
                '/grpcintegration.TopoService/getPaths',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.getPathRequest.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Paths.FromString,
                )


class TopoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getGraph(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def currentTopology(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPaths(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TopoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getGraph': grpc.unary_unary_rpc_method_handler(
                    servicer.getGraph,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.FromString,
                    response_serializer=protobuf_dot_proto_dot_net_dot_topology_dot_TopologyGraphProto__pb2.TopologyGraphProto.SerializeToString,
            ),
            'currentTopology': grpc.unary_unary_rpc_method_handler(
                    servicer.currentTopology,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.FromString,
                    response_serializer=protobuf_dot_proto_dot_net_dot_topology_dot_TopologyProto__pb2.TopologyProto.SerializeToString,
            ),
            'getPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.getPaths,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.getPathRequest.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Paths.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcintegration.TopoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TopoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getGraph(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.TopoService/getGraph',
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
            protobuf_dot_proto_dot_net_dot_topology_dot_TopologyGraphProto__pb2.TopologyGraphProto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def currentTopology(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.TopoService/currentTopology',
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
            protobuf_dot_proto_dot_net_dot_topology_dot_TopologyProto__pb2.TopologyProto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.TopoService/getPaths',
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.getPathRequest.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Paths.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class HostServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getHosts = channel.unary_unary(
                '/grpcintegration.HostService/getHosts',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Hosts.FromString,
                )
        self.getHostCount = channel.unary_unary(
                '/grpcintegration.HostService/getHostCount',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.HostCountProto.FromString,
                )
        self.getHost = channel.unary_unary(
                '/grpcintegration.HostService/getHost',
                request_serializer=protobuf_dot_proto_dot_net_dot_HostIdProto__pb2.HostIdProto.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_net_dot_HostProto__pb2.HostProto.FromString,
                )
        self.getConnectedHostsByDeviceId = channel.unary_unary(
                '/grpcintegration.HostService/getConnectedHostsByDeviceId',
                request_serializer=protobuf_dot_proto_dot_net_dot_DeviceIdProto__pb2.DeviceIdProto.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Hosts.FromString,
                )
        self.getConnectedHostsByConnectedPoint = channel.unary_unary(
                '/grpcintegration.HostService/getConnectedHostsByConnectedPoint',
                request_serializer=protobuf_dot_proto_dot_net_dot_ConnectPointProto__pb2.ConnectPointProto.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Hosts.FromString,
                )


class HostServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getHosts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getHostCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getHost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getConnectedHostsByDeviceId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getConnectedHostsByConnectedPoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HostServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.getHosts,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Hosts.SerializeToString,
            ),
            'getHostCount': grpc.unary_unary_rpc_method_handler(
                    servicer.getHostCount,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.HostCountProto.SerializeToString,
            ),
            'getHost': grpc.unary_unary_rpc_method_handler(
                    servicer.getHost,
                    request_deserializer=protobuf_dot_proto_dot_net_dot_HostIdProto__pb2.HostIdProto.FromString,
                    response_serializer=protobuf_dot_proto_dot_net_dot_HostProto__pb2.HostProto.SerializeToString,
            ),
            'getConnectedHostsByDeviceId': grpc.unary_unary_rpc_method_handler(
                    servicer.getConnectedHostsByDeviceId,
                    request_deserializer=protobuf_dot_proto_dot_net_dot_DeviceIdProto__pb2.DeviceIdProto.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Hosts.SerializeToString,
            ),
            'getConnectedHostsByConnectedPoint': grpc.unary_unary_rpc_method_handler(
                    servicer.getConnectedHostsByConnectedPoint,
                    request_deserializer=protobuf_dot_proto_dot_net_dot_ConnectPointProto__pb2.ConnectPointProto.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Hosts.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcintegration.HostService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HostService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.HostService/getHosts',
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Hosts.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getHostCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.HostService/getHostCount',
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.HostCountProto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.HostService/getHost',
            protobuf_dot_proto_dot_net_dot_HostIdProto__pb2.HostIdProto.SerializeToString,
            protobuf_dot_proto_dot_net_dot_HostProto__pb2.HostProto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getConnectedHostsByDeviceId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.HostService/getConnectedHostsByDeviceId',
            protobuf_dot_proto_dot_net_dot_DeviceIdProto__pb2.DeviceIdProto.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Hosts.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getConnectedHostsByConnectedPoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.HostService/getConnectedHostsByConnectedPoint',
            protobuf_dot_proto_dot_net_dot_ConnectPointProto__pb2.ConnectPointProto.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Hosts.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DeviceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getDeviceCount = channel.unary_unary(
                '/grpcintegration.DeviceService/getDeviceCount',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.DeviceCountProto.FromString,
                )
        self.getDevices = channel.unary_unary(
                '/grpcintegration.DeviceService/getDevices',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Devices.FromString,
                )
        self.getPorts = channel.unary_unary(
                '/grpcintegration.DeviceService/getPorts',
                request_serializer=protobuf_dot_proto_dot_net_dot_DeviceIdProto__pb2.DeviceIdProto.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Ports.FromString,
                )
        self.getDevice = channel.unary_unary(
                '/grpcintegration.DeviceService/getDevice',
                request_serializer=protobuf_dot_proto_dot_net_dot_DeviceIdProto__pb2.DeviceIdProto.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_net_dot_DeviceProto__pb2.DeviceProto.FromString,
                )


class DeviceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getDeviceCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDevices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPorts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getDeviceCount': grpc.unary_unary_rpc_method_handler(
                    servicer.getDeviceCount,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.DeviceCountProto.SerializeToString,
            ),
            'getDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.getDevices,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Devices.SerializeToString,
            ),
            'getPorts': grpc.unary_unary_rpc_method_handler(
                    servicer.getPorts,
                    request_deserializer=protobuf_dot_proto_dot_net_dot_DeviceIdProto__pb2.DeviceIdProto.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Ports.SerializeToString,
            ),
            'getDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.getDevice,
                    request_deserializer=protobuf_dot_proto_dot_net_dot_DeviceIdProto__pb2.DeviceIdProto.FromString,
                    response_serializer=protobuf_dot_proto_dot_net_dot_DeviceProto__pb2.DeviceProto.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcintegration.DeviceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeviceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getDeviceCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.DeviceService/getDeviceCount',
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.DeviceCountProto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.DeviceService/getDevices',
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Empty.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Devices.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPorts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.DeviceService/getPorts',
            protobuf_dot_proto_dot_net_dot_DeviceIdProto__pb2.DeviceIdProto.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_ControlMessagesProto__pb2.Ports.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.DeviceService/getDevice',
            protobuf_dot_proto_dot_net_dot_DeviceIdProto__pb2.DeviceIdProto.SerializeToString,
            protobuf_dot_proto_dot_net_dot_DeviceProto__pb2.DeviceProto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CoreServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """


class CoreServiceServicer(object):
    """Missing associated documentation comment in .proto file."""


def add_CoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcintegration.CoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CoreService(object):
    """Missing associated documentation comment in .proto file."""


class EventNotificationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.register = channel.unary_unary(
                '/grpcintegration.EventNotification/register',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.RegistrationRequest.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.RegistrationResponse.FromString,
                )
        self.onEvent = channel.unary_stream(
                '/grpcintegration.EventNotification/onEvent',
                request_serializer=protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.Topic.SerializeToString,
                response_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.Notification.FromString,
                )


class EventNotificationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def onEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EventNotificationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'register': grpc.unary_unary_rpc_method_handler(
                    servicer.register,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.RegistrationRequest.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.RegistrationResponse.SerializeToString,
            ),
            'onEvent': grpc.unary_stream_rpc_method_handler(
                    servicer.onEvent,
                    request_deserializer=protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.Topic.FromString,
                    response_serializer=protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.Notification.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcintegration.EventNotification', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EventNotification(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcintegration.EventNotification/register',
            protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.RegistrationRequest.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.RegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def onEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/grpcintegration.EventNotification/onEvent',
            protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.Topic.SerializeToString,
            protobuf_dot_proto_dot_grpcintegration_dot_EventNotificationProto__pb2.Notification.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
